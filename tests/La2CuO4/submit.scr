#!/bin/bash
set -x
########################################################################
# SUN Grid Engine job wrapper
# parallel job on opteron queue
########################################################################
#$ -N La2CuO4
#$ -pe mpi2 17
#$ -q wp08
#$ -j y
#$ -M chuckyee@physics.rutgers.edu
#$ -m n
#$ -v WIEN_DMFT_ROOT,LD_LIBRARY_PATH,SMPD_OPTION_NO_DYNAMIC_HOSTS
########################################################################
# DON'T remove the following line!
source $TMPDIR/sge_init.sh
########################################################################

export SMPD_OPTION_NO_DYNAMIC_HOSTS=1

########################################################################
# WIEN2K
#

function w2k {
    # Create subdirectory with same name as job = input filename = case name
    # and move all files into subdir.
    echo $JOBNAME
    mkdir $JOBNAME
    cp * $JOBNAME
    cd $JOBNAME

    # create .machines file for WIEN2k
    echo '#' > .machines
    for nodes in `cat $TMPDIR/machines`
    do
      echo "1: " "$nodes " >> .machines
    done

    # in case we forgot, clean up old run (-s for no interactive prompt)
    clean_lapw -s

    # run WIEN2k with k-point parallelization
    run -p -in1ef -ec 0.0001 -cc 0.0005
    x qtl -p

    # get rid of huge vector file
    clean_lapw -s

    # ./optimize.job

    # move all files back into main dir, and delete subdir
    mv * ..
    cd ..
    rm -r $JOBNAME

    # # copy relevant files back into main dir
    # dmft_copy.py -ld . ..
    # cd ..
}


########################################################################
# DMFT
#

function initdmft {
    export WIEN_DMFT_ROOT=/home/chuckyee/dmft_w2k/bin
    # export WIEN_DMFT_ROOT=/home/haule/dmft_w2k_111/bin
    export PATH=$PATH:$WIEN_DMFT_ROOT
    export SCRATCH="."
    export SMPD_OPTION_NO_DYNAMIC_HOSTS=1
    # export PYTHONPATH=/home/chuckyee/dmft_w2k/bin
    
    echo "/opt/mpich2/intel/11.1/bin/mpiexec -env LD_LIBRARY_PATH /opt/intel/Compiler/11.1/072/mkl/lib/em64t:/opt/intel/Compiler/11.1/072/lib/intel64 -env  SMPD_OPTION_NO_DYNAMIC_HOSTS 1 -port $port -np $NSLOTS -machinefile $TMPDIR/machines" > mpi_prefix.dat
    # echo "/opt/mpich2/intel/11.1/bin/mpiexec -env LD_LIBRARY_PATH /opt/intel/Compiler/11.1/072/mkl/lib/em64t -env  SMPD_OPTION_NO_DYNAMIC_HOSTS 1 -port $port -np $NSLOTS -machinefile $TMPDIR/machines" > mpi_prefix.dat

    # echo 'phrase=pass' > /home/chuckyee/.smpd
}

function dmft {
    initdmft

    echo
    echo "RUNNING DMFT"
    echo

    run_dmft.py > dmft.log 2>&1
    x -f $JOBNAME qtl -p
    rm ${JOBNAME}.vector*
}


########################################################################
# DMFT OPTICS
#

function dmftopt {
    initdmft

    echo
    echo "RUNNING DMFT OPTICS"
    echo

    /opt/mpich2/intel/11.1/bin/mpiexec -env LD_LIBRARY_PATH /opt/intel/Compiler/11.1/072/mkl/lib/em64t -env  SMPD_OPTION_NO_DYNAMIC_HOSTS 1 -port $port -np $NSLOTS -machinefile $TMPDIR/machines dmftopt > dmftopt.log 2>&1
}


########################################################################
# MAIN
#

JOBNAME="La2CuO4"   # must be equal to case name

source /opt/intel/Compiler/11.1/072/bin/ifortvars.sh intel64

export WIENROOT=/home/chuckyee/wien2k
export PATH=$PATH:$WIENROOT


# scp rupc06:~/mnt/w/RNiO3/NdNiO3/sig-pole/xcc-100K-nf7.3-test/* .

w2k

# dmft

# dmftopt

# for KPTS in 5 6 7 8 9 10 11 12 13 14 15
# do
#   mkdir $KPTS
#   cp * $KPTS/
#   cp ${JOBNAME}.kgen-${KPTS} $KPTS/${JOBNAME}.kgen
#   cp ${JOBNAME}.klist-${KPTS} $KPTS/${JOBNAME}.klist
#   cd $KPTS/
#   w2k
#   cp ${JOBNAME}.clmsum ../
#   cd ../
# done


# for RKMAX in 6.5 7.0 7.5 8.0 8.5 9.0 9.5
# do
#   mkdir $RKMAX
#   cp * $RKMAX/
#   cp ${JOBNAME}.in1-${RKMAX} $RKMAX/${JOBNAME}.in1
#   cd $RKMAX/
#   w2k
#   cp ${JOBNAME}.clmsum ../
#   cd ../
# done

# scp * rupc06:~/mnt/w/RNiO3/NdNiO3/sig-pole/xcc-100K-nf7.3-test/run1
